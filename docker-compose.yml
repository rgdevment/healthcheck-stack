services:
  mariadb:
    image: mariadb:11.7.2
    container_name: mariadb
    restart: unless-stopped
    command: >
      --skip-name-resolve
      --max_allowed_packet=64M
      --innodb_buffer_pool_size=512M
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - mariadb-data:/var/lib/mysql
      - ./mariadb/init:/docker-entrypoint-initdb.d:ro
    networks:
      - internal-net
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$MYSQL_ROOT_PASSWORD']
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']
    networks:
      - internal-net
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: mysqld-exporter
    restart: unless-stopped
    command:
      - '--collect.global_status'
      - '--collect.global_variables'
      - '--collect.info_schema.processlist'
      - '--collect.slave_status'
      - '--collect.info_schema.tables'
      - '--collect.info_schema.tablestats'
      - '--collect.engine_innodb_status'
      - '--collect.auto_increment.columns'
      - '--collect.binlog_size'
      - '--collect.info_schema.query_response_time'
      - '--config.my-cnf=/etc/mysqld_exporter/.my.cnf'
    environment:
      - DATA_SOURCE_NAME=exporter:exporter@(mariadb:3306)/
    volumes:
      - ./mariadb/mysqld_exporter.cnf:/etc/mysqld_exporter/.my.cnf:ro
    expose:
      - 9104
    networks:
      - internal-net
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:9104/metrics']
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    restart: unless-stopped
    networks:
      - internal-net
    environment:
      - REDIS_ADDR=redis://redis:6379
    expose:
      - 9121
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:9121/metrics']
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/exported-dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    networks:
      - internal-net
    expose:
      - 3000
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/']
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - internal-net
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 1.0G
          cpus: '0.7'
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:9090/-/ready']
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CLOUD_FLARE_TUNNEL_TOKEN}
    networks:
      - internal-net
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - internal-net
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: 'json-file'
      options:
        max-size: '5m'
        max-file: '1'

volumes:
  redis-data:
  mariadb-data:
  grafana-data:
  prometheus-data:

networks:
  internal-net:
    external: true
